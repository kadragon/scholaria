services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: ./scripts/docker/fastapi-dev-entrypoint.sh
    ports:
      - "${FASTAPI_PORT:-8001}:8001"
    environment:
      DEBUG: "1"
      DB_ENGINE: postgresql
      DB_NAME: ${POSTGRES_DB:-scholaria}
      DB_USER: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      DB_HOST: postgres
      DB_PORT: "5432"
      REDIS_URL: redis://redis:6379/0
      QDRANT_HOST: qdrant
      QDRANT_PORT: "6333"
      OPENAI_API_KEY: ${OPENAI_API_KEY:-changeme}
      FASTAPI_ALLOWED_ORIGINS: "http://localhost:5173,http://localhost:3000"
      UV_PROJECT_ENVIRONMENT: /opt/uv
    volumes:
      - .:/app
      - uploads:/app/uploads
      - media:/app/media
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      qdrant:
        condition: service_started

  frontend:
    image: node:20-alpine
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8001/api/admin
      - VITE_BASE_PATH=/admin/
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules

  puppeteer:
    build:
      context: ./services/puppeteer
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: "3000"
    restart: unless-stopped

volumes:
  uploads:
    driver: local
  media:
    driver: local
  frontend_node_modules:
