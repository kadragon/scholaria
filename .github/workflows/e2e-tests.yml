name: E2E Tests

on:
  pull_request:
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/e2e-tests.yml'
  push:
    branches:
      - main

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: scholaria
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      qdrant:
        image: qdrant/qdrant:v1.12.5
        ports:
          - 6333:6333

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install uv
        run: pip install uv

      - name: Install backend dependencies
        run: uv sync

      - name: Run migrations
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/scholaria
          REDIS_URL: redis://localhost:6379
          QDRANT_URL: http://localhost:6333
        run: uv run alembic upgrade head

      - name: Start backend server
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/scholaria
          REDIS_URL: redis://localhost:6379
          QDRANT_URL: http://localhost:6333
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'sk-test-dummy-key' }}
          JWT_SECRET_KEY: test-secret-key-for-ci
          OTEL_ENABLED: false
        run: |
          uv run uvicorn backend.main:app --host 0.0.0.0 --port 8001 &
          echo $! > backend.pid

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Install Playwright browsers
        working-directory: frontend
        run: npx playwright install --with-deps chromium

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Start frontend server
        working-directory: frontend
        run: |
          npm run preview -- --port 5173 --host &
          echo $! > frontend.pid

      - name: Wait for services
        run: |
          npx wait-on http://localhost:8001/health http://localhost:5173 -t 60000

      - name: Run E2E tests
        working-directory: frontend
        run: npx playwright test

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 7

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces
          path: frontend/test-results/
          retention-days: 7

      - name: Cleanup
        if: always()
        run: |
          if [ -f frontend/frontend.pid ]; then kill $(cat frontend/frontend.pid) || true; fi
          if [ -f backend.pid ]; then kill $(cat backend.pid) || true; fi
